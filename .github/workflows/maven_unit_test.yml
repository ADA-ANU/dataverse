name: Maven Tests

on:
    push:
        paths:
            - "**.java"
            - "pom.xml"
            - "modules/**/pom.xml"
    pull_request:
        paths:
            - "**.java"
            - "pom.xml"
            - "modules/**/pom.xml"

jobs:
    unittest:
        name: (${{ matrix.status}} / JDK ${{ matrix.jdk }}) Unit Tests
        strategy:
            fail-fast: false
            matrix:
                jdk: [ '11' ]
                experimental: [false]
                status:  ["Stable"]
                #
                # JDK 17 builds disabled due to non-essential fails marking CI jobs as completely failed within
                # Github Projects, PR lists etc. This was consensus on Slack #dv-tech. See issue #8094
                # (This is a limitation of how Github is currently handling these things.)
                #
                #include:
                #    - jdk: '17'
                #      experimental: true
                #      status: "Experimental"
        continue-on-error: ${{ matrix.experimental }}
        runs-on: ubuntu-latest
        steps:
          # Basic setup chores
          - uses: actions/checkout@v3
          - name: Set up JDK ${{ matrix.jdk }}
            uses: actions/setup-java@v3
            with:
                java-version: ${{ matrix.jdk }}
                distribution: 'adopt'
          - name: Cache Maven packages
            uses: actions/cache@v2
            with:
                path: ~/.m2
                key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                restore-keys: ${{ runner.os }}-m2

          - name: Build with Maven
            run: mvn -DcompilerArgument=-Xlint:unchecked -Dtarget.java.version=${{ matrix.jdk }} -P all-unit-tests clean test

          # Store the build for the next step (integration test) to avoid recompilation and to transfer coverage reports
          - run: tar -cvf java-builddir.tar target
          - uses: actions/upload-artifact@v3
            with:
                name: java-builddir
                path: java-builddir.tar
                retention-days: 3
    integration-test:
        runs-on: ubuntu-latest
        needs: unittest
        name: (${{ matrix.status}} / JDK ${{ matrix.jdk }}) Integration Tests
        strategy:
            fail-fast: false
            matrix:
                jdk: [ '11' ]
                experimental: [ false ]
                status: [ "Stable" ]
                #
                # JDK 17 builds disabled due to non-essential fails marking CI jobs as completely failed within
                # Github Projects, PR lists etc. This was consensus on Slack #dv-tech. See issue #8094
                # (This is a limitation of how Github is currently handling these things.)
                #
                #include:
                #    - jdk: '17'
                #      experimental: true
                #      status: "Experimental"
        continue-on-error: ${{ matrix.experimental }}
        steps:
            # Basic setup chores
            - uses: actions/checkout@v3
            - name: Set up JDK ${{ matrix.jdk }}
              uses: actions/setup-java@v3
              with:
                  java-version: ${{ matrix.jdk }}
                  distribution: 'adopt'
            - name: Cache Maven packages
              uses: actions/cache@v2
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2

            # Get the build output from the unit test job
            - uses: actions/download-artifact@v3
              with:
                  name: java-builddir
            - run: tar -xvf java-builddir.tar

            # Run integration tests (but not unit tests again)
            - run: mvn -DskipUnitTests -Dtarget.java.version=${{ matrix.jdk }} verify

            # Wrap up and send to coverage job
            - run: tar -cvf java-reportdir.tar target/site
            - uses: actions/upload-artifact@v3
              with:
                  name: java-reportdir
                  path: java-reportdir.tar
                  retention-days: 3
    coverage-report:
        runs-on: ubuntu-latest
        needs: integration-test
        name: Coverage Report Submission
        steps:
            # Basic setup chores
            - uses: actions/checkout@v3
            - uses: actions/setup-java@v3
              with:
                  java-version: '11'
                  distribution: 'adopt'
            - name: Cache Maven packages
              uses: actions/cache@v2
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2

            # Get the build output from the integration test job
            - uses: actions/download-artifact@v3
              with:
                  name: java-reportdir
            - run: tar -xvf java-reportdir.tar

            # Deposit Code Coverage
            - name: Maven Code Coverage
              env:
                CI_NAME: github
                COVERALLS_SECRET: ${{ secrets.GITHUB_TOKEN }}
              run: mvn -V -B coveralls:report -DrepoToken=${COVERALLS_SECRET} -DpullRequest=${{ github.event.number }}

            # NOTE: this may be extended with adding a report to the build output, leave a comment, send to Sonarcloud, ...

    push-app-img:
        name: Publish App Image
        permissions:
            contents: read
            packages: write
            pull-requests: write
        needs: unittest
        uses: ./.github/workflows/container_app_push.yml
        secrets: inherit
