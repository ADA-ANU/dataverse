<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:p="http://primefaces.org/ui"
    xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
    xmlns:jsf="http://xmlns.jcp.org/jsf"
    xmlns:pt="http://java.sun.com/jsf/passthrough"
    xmlns:cc="http://java.sun.com/jsf/composite"
    xmlns:o="http://omnifaces.org/ui"
    xmlns:iqbs="http://xmlns.jcp.org/jsf/composite/iqbs">
    <p:outputPanel>
        <div id="fileInfoInclude-filesTable" class="col-sm-12 row">
            <div class="pull-left col-file-thumb">
                <div class="thumbnail-block text-center">  
                    <span class="icon-#{dataFileServiceBean.getFileThumbnailClass(fileMetadata.dataFile)} file-thumbnail-icon text-muted" jsf:rendered="#{!dataFileServiceBean.isThumbnailAvailable(fileMetadata.dataFile)}"/>
                    <span class="file-thumbnail-preview-img" jsf:rendered="#{dataFileServiceBean.isThumbnailAvailable(fileMetadata.dataFile)}"
                          data-toggle="popover" data-placement="bottom" data-trigger="hover" data-html="true" data-content="&lt;img src=&#34;/api/access/datafile/#{fileMetadata.dataFile.id}?imageThumb=400&#34; alt=&#34;#{bundle['file.preview']} #{fileMetadata.label}&#34; /&gt;"
                          data-template='&lt;div class="popover thumb-preview" role="tooltip"&gt;&lt;div class="arrow"&gt;&lt;/div&gt;&lt;h3 class="popover-title"&gt;&lt;/h3&gt;&lt;div class="popover-content"&gt;&lt;/div&gt;&lt;/div&gt;'>
                        <p:graphicImage value="/api/access/datafile/#{fileMetadata.dataFile.id}?imageThumb=true" alt="#{fileMetadata.label}"/>
                    </span>
                    <!-- Restricted File Icon -->
                    <div class="file-icon-restricted-block" jsf:rendered="#{fileMetadata.restricted and !fileDownloadHelper.canDownloadFile(fileMetadata)}">                  
                        <span class="glyphicon glyphicon-lock text-danger"/>
                    </div>
                    <div class="file-icon-restricted-block" jsf:rendered="#{fileMetadata.restricted and fileDownloadHelper.canDownloadFile(fileMetadata)}">
                        <span class="icon-unlock text-success"/>
                    </div>
                </div>
            </div>
            <div class="col-sm-10 col-file-metadata">
                <div class="fileNameOriginal">
                    <ui:fragment rendered="#{!editDatafilesPage}">
                        <!-- conditional render in file page links, if file has global id, use that; if not, we use database id -->
                        <a href="#{widgetWrapper.wrapURL('/file.xhtml?'.concat(!empty fileMetadata.dataFile.globalIdString ? 'persistentId=' : 'fileId=').concat(!empty fileMetadata.dataFile.globalIdString ? fileMetadata.dataFile.globalIdString : fileMetadata.dataFile.id).concat('&amp;version=').concat(fileMetadata.datasetVersion.friendlyVersionNumber))}">
                            #{fileMetadata.label}
                        </a>
                    </ui:fragment>
                    <ui:fragment rendered="#{editDatafilesPage}">
                        <span>#{fileMetadata.label}</span>
                    </ui:fragment>
                </div>
                <!-- HIERARCHY + TYPE + SIZE + DATE + CHECKSUM -->
                <div class="text-muted small">
                    <!-- id:#{fileMetadata.dataFile.id} -->
                    <div jsf:rendered="#{!empty fileMetadata.directoryLabel}">
                        <h:outputText id="fileHierarchy" value="#{fileMetadata.directoryLabel}/"/>
                    </div>
                    <h:outputText id="fileTypeOutputRegular" value="#{fileMetadata.dataFile.friendlyType}" rendered="#{!(fileMetadata.dataFile.tabularData)}"/>
                    <h:outputText id="fileTypeOutputTabular" value="#{bundle['file.type.tabularData']}" rendered="#{fileMetadata.dataFile.tabularData}"/>
                    <h:outputText id="fileSize" value=" - #{fileMetadata.dataFile.friendlySize}"/>

                    <h:outputText id="fileCreatePublishDate" value=" - #{fileMetadata.getFileDateToDisplay()}" rendered="#{!(empty fileMetadata.id)}"/>

                    <h:outputFormat id="fileDownloadCount" value=" - {0} #{bundle['metrics.downloads']}" rendered="#{!(settingsWrapper.rsyncOnly)}">
                        <f:param value="#{guestbookResponseServiceBean.getCountGuestbookResponsesByDataFileId(fileMetadata.dataFile.id)}"/>
                    </h:outputFormat>

                    <div class="checksum-block" style="word-break: break-all;" jsf:rendered="#{!fileMetadata.dataFile.tabularData}">
                        <h:outputText id="file-checksum" value="#{fileMetadata.dataFile.checksumType}: #{fileMetadata.dataFile.checksumValue}" rendered="#{!(empty fileMetadata.dataFile.checksumValue)}"/>
                    </div>
                    <!-- UNF + Variables, Obsersvations -->
                    <div class="unf-block" style="word-break: break-all;" jsf:rendered="#{fileMetadata.dataFile.tabularData}">
                        <h:outputText id="fileNumVars" value="#{fileMetadata.dataFile.dataTable.varQuantity} #{bundle['file.metaData.dataFile.dataTab.variables']}, " rendered="#{fileMetadata.dataFile.tabularData}"/>
                        <h:outputText id="fileNumObs" value="#{fileMetadata.dataFile.dataTable.caseQuantity} #{bundle['file.metaData.dataFile.dataTab.observations']} #{!empty fileMetadata.dataFile.unf ? ' - ' : ''}" rendered="#{fileMetadata.dataFile.tabularData}"/>
                        <h:outputText id="fileUNF" value="#{fileMetadata.dataFile.unf}" rendered="#{!empty fileMetadata.dataFile.unf}"/>
                    </div>
                </div>
                <div class="fileDescription small" jsf:rendered="#{!(empty fileMetadata.description)}">
                    <h:outputText id="fileDescNonEmpty" value="#{fileMetadata.description}"/>
                </div>

                <div class="file-tags-block" jsf:rendered="#{!(empty fileMetadata.categories) or !(empty fileMetadata.dataFile.tags)}">
                    <ui:fragment rendered="#{!(empty fileMetadata.categories)}">
                        <ui:repeat value="#{fileMetadata.categories}" var="cat">
                            <h:outputText value="#{cat.name}" styleClass="label label-default"/>
                        </ui:repeat> 
                    </ui:fragment>
                    <ui:fragment>
                        <ui:repeat value="#{fileMetadata.dataFile.tags}" var="tag">
                            <h:outputText value="#{tag.typeLabel}" styleClass="label label-info"/>
                        </ui:repeat>
                    </ui:fragment>
                </div>
            </div>
        </div>
    </p:outputPanel>
</ui:composition>