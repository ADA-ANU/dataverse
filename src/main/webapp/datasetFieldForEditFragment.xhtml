<ui:composition
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:ui="http://java.sun.com/jsf/facelets"
        xmlns:c="http://java.sun.com/jsp/jstl/core"
        xmlns:p="http://primefaces.org/ui"
        xmlns:pt="http://java.sun.com/jsf/passthrough"
        xmlns:jsf="http://xmlns.jcp.org/jsf">

    <ui:remove>
        <!-- input text start UPDATE: UI:REMOVE applied due to duplicate ID errors, left code as reference incase test scripts complain -->
        <span id="pre-input-#{dsf.datasetFieldType.name}" class="pre-input-tag"/></ui:remove>
        
    <c:set var="displayCV" value="#{cvoc.size() > 0 and (dsfv.datasetField.datasetFieldType.name ==cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[0].getString()
                    or dsfv.datasetField.datasetFieldType.name==cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[1].getString()
                    or dsfv.datasetField.datasetFieldType.name==cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[2].getString()
                    or dsfv.datasetField.datasetFieldType.name==cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[3].getString())}"/>
    <p:inputText value="#{dsfv.valueForEdit}" id="inputText" pt:aria-required="#{dsf.required}"
                 styleClass="form-control #{dsfv.datasetField.datasetFieldType.name == 'title' and DatasetPage.editMode == 'CREATE'  ? 'datasetfield-title' : ''}"
                 rendered="#{!dsfv.datasetField.datasetFieldType.controlledVocabulary and !displayCV
                             and (dsfv.datasetField.datasetFieldType.fieldType == 'TEXT'
                             or dsfv.datasetField.datasetFieldType.fieldType == 'INT'
                             or dsfv.datasetField.datasetFieldType.fieldType == 'FLOAT'
                             or dsfv.datasetField.datasetFieldType.fieldType == 'URL'
                             or dsfv.datasetField.datasetFieldType.fieldType == 'DATE'
                             or dsfv.datasetField.datasetFieldType.fieldType == 'EMAIL')}"/>
    <p:watermark for="inputText" value="#{dsfv.datasetField.datasetFieldType.localeWatermark}"></p:watermark>
    <ui:fragment rendered="#{displayCV and dsfv.datasetField.datasetFieldType.name==cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[0].getString()}">
        <div id="akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[0].getString()}">
            <p:autoComplete id="cv_vocabs_#{valCount.index+1}_k" value="#{dsfv.valueForEdit}"
                            completeMethod="#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocabs')}"
                            style="width:100%;"
                            readonly="#{facesContext.renderResponse and cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocabs').size() == 1
                            and cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('readonly').asBoolean()}"/>

        </div>
    </ui:fragment>
    <ui:fragment rendered="#{displayCV and dsfv.datasetField.datasetFieldType.name==cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[1].getString()}">
        <div id="akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[1].getString()}">
            <p:inputText value="#{dsfv.valueForEdit}" id="cv_term_#{valCount.index+1}"
                         styleClass="form-control #{dsfv.datasetField.datasetFieldType.name == 'title' and DatasetPage.editMode == 'CREATE'  ? 'datasetfield-title' : ''}"/>
        </div>
    </ui:fragment>
    <ui:fragment rendered="#{displayCV and dsfv.datasetField.datasetFieldType.name==cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[2].getString() }">
        <div id="akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[2].getString()}">
            <p:inputText value="#{dsfv.valueForEdit}" id="cv_url_#{valCount.index+1}"
                         readonly="#{facesContext.renderResponse and cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('readonly').asBoolean()}" 
                         styleClass="form-control #{dsfv.datasetField.datasetFieldType.name == 'title' and DatasetPage.editMode == 'CREATE'  ? 'datasetfield-title' : ''}"/>
        </div>
        <script src="#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).getString('js-url')}">
        </script>
        <script>
        //<![CDATA[
                $(document).ready(function() {
                    var jsonResult = {};
                    var cvocUrl = "#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).getString('cvoc-url')}";
                    var cvocLang = "#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).getString('language')}";
                    var cvocProtocol = "#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).getString('protocol')}";
                    var vocabUri ="#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).getString('vocab-uri')}";
                    var termParentUri ="#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).getString('term-parent-uri')}";
                    var vocabsize = "#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocabs').size()}";
                    var readonly = "#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('readonly').asBoolean()}";
                    var hideReadonlyUrls = "#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('hideReadonlyUrls').asBoolean()}";
                    //$("#akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[3].getString()}").find("input[name*='cv_vocab_url_'").css('background-color' , '#EEEEEE');
                    $("#akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[3].getString()}").find("input[name*='cv_vocab_url_'").val(vocabUri);
                    if (vocabsize == 1 && readonly) {
                        // make it look readonly
                        $("#akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[0].getString()}").find("input[name*='cv_vocabs_'").css('background-color' , '#EEEEEE');
                        // Note that we could decide to not display this at all
                        //$("#akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[0].getString()}").parent().css('display' , 'none');
                    }
                    if (readonly && hideReadonlyUrls) {
                        // do not display URL fields and their labels
                        $("#akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[2].getString()}").parent().css('display' , 'none');
                        $("#akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[3].getString()}").parent().css('display' , 'none');
                    }
                    var selectedVocab = "";
                    var vocabFieldValue = $("#akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[0].getString()}").find("input[name*='cv_vocabs_'").val();
                    if (vocabFieldValue =='' && vocabsize == 1) {
                            selectedVocab = "#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[0].getString()}";
                            $("#akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[0].getString()}").find("input[name*='cv_vocabs_'").val(selectedVocab);
                    }
                    $("#akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.name).get('vocab-codes')[0].getString()}").find("input[name*='cv_vocabs_'").on("focusout", function(){
                          selectedVocab = $(this).val();
                        });

                    var mapquery = "#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).getString('map-query')}";
                    var mapid = "#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).getString('map-id')}";
                    var mapping = { query: mapquery,  id: mapid };
                    // Using jQuery UI Autocomplete for the term input
                    $("#akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[1].getString()}").find("input[name*='cv_term_']").autocomplete(
                    {
                          source: function( request, response ) {
                            cv = { 'cvocUrl' : cvocUrl, 'protocol': cvocProtocol, 'lang': cvocLang, 'termParentUri': termParentUri, 'selectedVocab': selectedVocab, 'term': request.term };
                        autointerface(request, response, cv, mapping);
                          },
                          minLength: #{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).getInt('minChars')},
                          select: function(event, ui) {
                               $.each(ui, function(i, v) {
                               $("#akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[2].getString()}").find("input[name*='cv_url_']").val(v.id);
                               }
                             )}
                        }
                    );
                 });
            //]]>
            </script>
        <style type="text/css">
            ul.ui-autocomplete {
                list-style: none;
                list-style-type: none;
                padding: 0px;
                margin: 0px;
                max-height: 150px;
                overflow-y: auto;
                /* prevent horizontal scrollbar */
                overflow-x: hidden;
                /* add padding to account for vertical scrollbar */
                padding-right: 20px;
            }
            input[type='text'].ui-autocomplete-loading {
                background: url('/resources/images/ajax-loading.gif') no-repeat right center;
            }
        </style>
    </ui:fragment>
    <ui:fragment rendered="#{displayCV and dsfv.datasetField.datasetFieldType.name==cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[3].getString()}">
        <div id="akmi_#{valCount.index+1}_#{cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('vocab-codes')[3].getString()}">
            <p:inputText value="#{dsfv.valueForEdit}" id="cv_vocab_url_#{valCount.index+1}"
                         readonly="#{facesContext.renderResponse and cvoc.get(dsfv.datasetField.datasetFieldType.parentDatasetFieldType.id).get('readonly').asBoolean()}"
                         styleClass="form-control #{dsfv.datasetField.datasetFieldType.name == 'title' and DatasetPage.editMode == 'CREATE'  ? 'datasetfield-title' : ''}"/>
        </div>
    </ui:fragment>
    <p:inputTextarea value="#{dsfv.valueForEdit}" id="description" pt:aria-required="#{dsf.required}"
                     rows="5" cols="60" styleClass="form-control"
                     rendered="#{dsfv.datasetField.datasetFieldType.fieldType == 'TEXTBOX'}"/>
    <p:watermark for="description" value="#{dsfv.datasetField.datasetFieldType.localeWatermark}"></p:watermark>

    <div class="ui-message ui-message-error ui-widget ui-corner-all" aria-live="polite" jsf:rendered="#{dsfvIndex eq 0 and !empty dsfv.datasetField.validationMessage}">
        <span class="ui-message-error-detail">#{dsfv.datasetField.validationMessage}</span>
    </div>

    <div class="ui-message ui-message-error ui-widget ui-corner-all" aria-live="polite" jsf:rendered="#{!empty dsfv.validationMessage}">
        <span class="ui-message-error-detail">#{dsfv.validationMessage}</span>
    </div>

    <!-- This button / script is for replication data for the title field and is client side only -->
    <ui:fragment rendered="#{dsfv.datasetField.datasetFieldType.name == 'title' and DatasetPage.editMode == 'CREATE' }">
        <input type="button" id="replicationDataButton"
               class="btn btn-default" value="#{bundle['dataset.AddReplication']}"
               onclick="replicationFor();return false;"/>
        <script>
            //<![CDATA[
            function replicationFor() {
                $(".datasetfield-title")[0].value = "#{bundle['dataset.replicationDataFor']} " + $(".datasetfield-title")[0].value;
                $('#replicationDataButton').prop('disabled', true);
            }
            //]]>
        </script>
    </ui:fragment>
</ui:composition>