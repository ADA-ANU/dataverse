<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:p="http://primefaces.org/ui"
    xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
    xmlns:jsf="http://xmlns.jcp.org/jsf"
    xmlns:pt="http://java.sun.com/jsf/passthrough"
    xmlns:cc="http://java.sun.com/jsf/composite"
    xmlns:o="http://omnifaces.org/ui"
    xmlns:iqbs="http://xmlns.jcp.org/jsf/composite/iqbs">

    <!-- REMOVED INGEST WARNING -->
    
    <!-- Explore button -->
    <ui:fragment rendered="#{fileDownloadHelper.canDownloadFile(fileMetadata) and not empty exploreTools or (worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata))}">
        <!--exploreTools is set as a ui:param by the file and dataset pages-->
        <!--Note that "WorldMap Explore" is not an explore tool (external tool)-->

        <!-- FILE PG -->
        <li class="#{exploreTools.size()>1 
                            or (exploreTools.size()>=1 
                            and worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata))
                        ? 'dropdown-submenu pull-left' : ''}" jsf:rendered="#{isFilePg}">
            
            <ui:fragment rendered="#{(exploreTools.size()==1 and !worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata)) or (exploreTools.size()==0 and worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata))}">
                <a class="btn-explore" tabindex="-1" onclick="$(this).parent().find( 'li > a' ).trigger( 'click' );">#{bundle.explore}</a>
            </ui:fragment>
            
            <ui:fragment rendered="#{exploreTools.size()>1 or (exploreTools.size()>=1 and worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata))}">
                <a class="btn-explore" tabindex="-1" href="javascript:void(0);">#{bundle.explore}</a>
            </ui:fragment>
            
            <ul class="dropdown-menu multi-level" role="menu">
                <!-- externalTools -->
                <ui:repeat var="tool" value="#{exploreTools}">
                    <li>
                        <h:commandLink rendered="#{!downloadPopupRequired}"
                                       styleClass="#{(fileMetadata.dataFile.ingestInProgress) ? 'disabled' : ''}"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                       action="#{fileDownloadService.explore(guestbookResponse, fileMetadata, tool )}">
                            #{tool.displayName}
                        </h:commandLink>
                        <!--The modifyDatafileAndFormat method below was added because on the dataset page, "tool" is null in the popup so we store it in the guestbookResponse because we know we'll need it later in the popup.-->
                        <p:commandLink rendered="#{downloadPopupRequired}"
                                       action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'externalTool', tool)}"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                       process="@this"
                                       update="@widgetVar(downloadPopup)"
                                       oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                            #{tool.displayName}
                        </p:commandLink>
                    </li>
                </ui:repeat>
                <!-- END: externalTools -->
                <!-- WorldMap -->
                <li jsf:rendered="#{worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata)}">
                    <h:commandLink rendered="#{!downloadPopupRequired}"
                                   styleClass="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                   action="#{fileDownloadService.startWorldMapDownloadLink(guestbookResponse, fileMetadata )}" target="_blank">
                        #{bundle['file.mapData.worldMap']}
                    </h:commandLink>
                    <p:commandLink rendered="#{downloadPopupRequired}"
                                   styleClass="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                   disabled="#{fileMetadata.dataFile.ingestInProgress or lockedFromDownload}"
                                   process="@this"
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'worldMap' )}"
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        #{bundle['file.mapData.worldMap']}
                    </p:commandLink>
                </li>
                <!-- END: WorldMap -->
            </ul>
        </li>
        <!-- END: FILE PG -->
        
        <!-- DATASET PG -->
        <div class="btn-group" jsf:rendered="#{!isFilePg}">
            <ui:fragment rendered="#{(exploreTools.size()==1 and !worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata)) or (exploreTools.size()==0 and worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata))}">
                <button type="button" class="btn btn-default btn-explore" onclick="$(this).parent().find( 'li > a' ).trigger( 'click' );">
                    <span class="glyphicon glyphicon-equalizer"/> #{bundle.explore}
                </button>
            </ui:fragment>
            <ui:fragment rendered="#{exploreTools.size()>1 or (exploreTools.size()>=1 and worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata))}">
                <button type="button" class="btn btn-default btn-explore dropdown-toggle" data-toggle="dropdown">
                    <span class="glyphicon glyphicon-equalizer"/> #{bundle.explore} <span class="caret"/>
                </button>
            </ui:fragment>
            <ul class="dropdown-menu multi-level pull-right text-left" role="menu">
                <!--external tools-->
                <ui:repeat var="tool" value="#{exploreTools}">
                    <li>
                        <h:commandLink rendered="#{!downloadPopupRequired}"
                                       styleClass="#{(fileMetadata.dataFile.ingestInProgress) ? 'disabled' : ''}"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                       action="#{fileDownloadService.explore(guestbookResponse, fileMetadata, tool )}">
                            #{tool.displayName}
                        </h:commandLink>
                        <!--The modifyDatafileAndFormat method below was added because on the dataset page, "tool" is null in the popup so we store it in the guestbookResponse because we know we'll need it later in the popup.-->
                        <p:commandLink rendered="#{downloadPopupRequired}"
                                       action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'externalTool', tool)}"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                       process="@this"
                                       update="@widgetVar(downloadPopup)"
                                       oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                            #{tool.displayName}
                        </p:commandLink>
                    </li>
                </ui:repeat>
                <!--WorldMap Explore-->
                <li jsf:rendered="#{worldMapPermissionHelper.canUserSeeExploreWorldMapButtonFromPage(fileMetadata)}">
                    <h:commandLink rendered="#{!downloadPopupRequired}"
                                   styleClass="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                   action="#{fileDownloadService.startWorldMapDownloadLink(guestbookResponse, fileMetadata )}" target="_blank">
                        #{bundle['file.mapData.worldMap']}
                    </h:commandLink>
                    <p:commandLink rendered="#{downloadPopupRequired}"
                                   styleClass="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}"
                                   disabled="#{fileMetadata.dataFile.ingestInProgress or lockedFromDownload}"
                                   process="@this"
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'worldMap' )}"
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        #{bundle['file.mapData.worldMap']}
                    </p:commandLink>
                </li>
            </ul>
        </div>
        <!-- END: DATASET PG -->
    </ui:fragment>
    <!-- Explore button -->

    
    <!-- Compute Button *FILE PG only*: -->
    <li jsf:rendered="#{isFilePg and FilePage.showComputeButton() and fileDownloadHelper.canDownloadFile(fileMetadata)}">
        <h:outputLink value="#{FilePage.computeUrl}" class="btn-compute" target="_blank">
            #{bundle['file.compute']}
        </h:outputLink>
    </li>
    <!-- END: Compute Button *FILE PG only*: -->
 
    <!-- Compute Button *DATASET PG only*: -->
    <h:outputLink value="#{DatasetPage.getComputeUrl(fileMetadata)}" class="btn btn-default btn-compute" target="_blank" rendered="#{!isFilePg and DatasetPage.showComputeButton(fileMetadata) and fileDownloadHelper.canDownloadFile(fileMetadata)}"> 
        <span class="glyphicon glyphicon-flash"/> #{bundle['file.compute']}
    </h:outputLink>
    <!-- END: Compute Button *DATASET PG only*: -->
 
    
    <!-- Download Button -->
    <ui:fragment rendered="#{fileDownloadHelper.canDownloadFile(fileMetadata)}">
    <!-- FILE PG -->
        <li class="#{fileMetadata.dataFile.tabularData
                        ? 'dropdown-submenu pull-left' : ''}"
            jsf:rendered="#{isFilePg}">
            <!-- DUPLICATE LINKS -->
            <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and !(downloadPopupRequired) 
                                    and fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload}"
                         styleClass="btn-download" process="@this"
                         disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                         update="@widgetVar(downloadPackagePopup)" oncomplete="PF('downloadPackagePopup').show();handleResizeDialog('downloadPackagePopup');">
                <f:actionListener binding="#{packagePopupFragmentBean.setFileMetadata(fileMetadata)}" />
                <f:actionListener binding="#{fileDownloadService.writeGuestbookResponseRecord(guestbookResponse, fileMetadata, 'package')}" />
                <!-- package data file: -->
                <!-- no guest book/terms of use/etc. - straight package popup -->
                #{bundle.download}
            </p:commandLink>
            <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and (downloadPopupRequired) 
                                    and fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload}"
                         styleClass="btn-download"
                         process="@this"
                         disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                         action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'package')}"
                         update="@widgetVar(downloadPopup)" oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                <f:actionListener binding="#{packagePopupFragmentBean.setFileMetadata(fileMetadata)}" /> 
                <!-- package data file: -->
                <!-- guest book or terms of use, etc. enabled - open "download popup" first: -->
                #{bundle.download}
            </p:commandLink>
            <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and !(downloadPopupRequired) 
                                      and !(fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload)}"
                         styleClass="btn-download"
                         process="@this"
                         disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                         actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'Download')}">
                <!-- non-tabular data file: -->
                <!-- no guest book/terms of use/etc. - straight to the download API url: -->
                #{bundle.download}
            </p:commandLink>
            <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and downloadPopupRequired 
                                      and !(fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload)}"
                         styleClass="btn-download"
                         process="@this"
                         disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                         action="#{guestbookResponseService.modifyDatafile(guestbookResponse, fileMetadata)}"
                         update="@widgetVar(downloadPopup)" oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                <!-- guest book or terms of use, etc. enabled - open "download popup" first: -->
                #{bundle.download}
            </p:commandLink>
            <!-- END:DUPLICATE LINKS -->
            <!-- DUP SUBMENU LINK -->
            <ui:fragment rendered="#{fileMetadata.dataFile.tabularData}">
                <!-- Download Dropdown -->
                <a class="btn-download" tabindex="-1" href="javascript:void(0);">#{bundle.download}</a>
            
                <ul class="dropdown-menu multi-level" role="menu">
                    
                    <!-- TODO: FIX PULL-LEFT DROPDOWN OVERLAP DOWNLOAD -->
                    
                    <ui:remove>
                    <li>
                        <p:commandLink styleClass="highlightBold" rendered="#{!(downloadPopupRequired)}"
                                       process="@this"
                                       actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'bundle')}">
                            #{bundle['file.downloadBtn.format.all']}
                        </p:commandLink>
                        <p:commandLink styleClass="highlightBold" rendered="#{downloadPopupRequired}"
                                       process="@this"
                                       action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'bundle' )}"
                                       update="@widgetVar(downloadPopup)"
                                       oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                            #{bundle['file.downloadBtn.format.all']}
                        </p:commandLink>
                    </li>
                    <li role="presentation" class="divider"></li>
                    </ui:remove>
                    <li>
                        <p:commandLink rendered="#{!downloadPopupRequired and !(fileMetadata.dataFile.originalFormatLabel == 'UNKNOWN')}"
                                       process="@this"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                       actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'original')}">
                            <h:outputFormat value="#{bundle['file.downloadBtn.format.original']}">
                                <f:param value="#{fileMetadata.dataFile.originalFormatLabel}"/>
                            </h:outputFormat>
                        </p:commandLink>
                        <p:commandLink rendered="#{downloadPopupRequired and !(fileMetadata.dataFile.originalFormatLabel == 'UNKNOWN')}"
                                       process="@this"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                       action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'original' )}"
                                       update="@widgetVar(downloadPopup)"
                                       oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                            <h:outputFormat value="#{bundle['file.downloadBtn.format.original']}">
                                <f:param value="#{fileMetadata.dataFile.originalFormatLabel}"/>
                            </h:outputFormat>
                        </p:commandLink>
                    </li>
                    <li>
                        <p:commandLink rendered="#{!downloadPopupRequired}"
                                       process="@this"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                       actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'tab')}">
                            #{bundle['file.downloadBtn.format.tab']}
                        </p:commandLink>
                        <p:commandLink rendered="#{downloadPopupRequired}"
                                       action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'tab' )}"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                       update="@widgetVar(downloadPopup)"
                                       oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                            #{bundle['file.downloadBtn.format.tab']}
                        </p:commandLink>
                    </li>
                    <ui:fragment rendered="#{!(fileMetadata.dataFile.originalFormatLabel == 'RData')}">
                        <li>
                            <p:commandLink rendered="#{!downloadPopupRequired}"
                                           process="@this"
                                           disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                           actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'RData')}">
                                #{bundle['file.downloadBtn.format.rdata']}
                            </p:commandLink>
                            <p:commandLink rendered="#{downloadPopupRequired}"
                                           process="@this"
                                           disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                           action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'RData' )}"
                                           update="@widgetVar(downloadPopup)"
                                           oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                                #{bundle['file.downloadBtn.format.rdata']}
                            </p:commandLink>
                        </li>
                    </ui:fragment>
                    <li>
                        <p:commandLink rendered="#{!downloadPopupRequired}"
                                       process="@this"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                       actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'var')}">
                            #{bundle['file.downloadBtn.format.var']}
                        </p:commandLink>
                        <p:commandLink rendered="#{downloadPopupRequired}"
                                       process="@this"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                       action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'var' )}"
                                       update="@widgetVar(downloadPopup)"
                                       oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                            #{bundle['file.downloadBtn.format.var']}
                        </p:commandLink>
                    </li>
                    <li class="dropdown-submenu pull-left">
                        <a tabindex="-1" href="javascript:void(0);">#{bundle['file.downloadBtn.format.citation']}</a>
                        <ul class="dropdown-menu">
                            <li>
                                <h:commandLink id="risLinkFilePgNew" actionListener="#{fileDownloadService.downloadDatafileCitationRIS(fileMetadata)}">
                                    <!-- TODO - WHAT IS THIS ID FOR? -->
                                    <h:outputText value="#{bundle['dataset.cite.downloadBtn.ris']}" />
                                </h:commandLink>
                            </li>
                            <li>
                                <h:commandLink id="endNoteLinkFilePgNew" action="#{fileDownloadService.downloadDatafileCitationXML(fileMetadata)}">
                                    <!-- TODO - WHAT IS THIS ID FOR? -->
                                    <h:outputText value="#{bundle['dataset.cite.downloadBtn.xml']}" />
                                </h:commandLink>
                            </li>
                            <li>
                                <h:commandLink id="bibLinkFilePgNew" action="#{fileDownloadService.downloadDatafileCitationBibtex(fileMetadata)}">
                                    <!-- TODO - WHAT IS THIS ID FOR? -->
                                    <h:outputText value="#{bundle['dataset.cite.downloadBtn.bib']}" />
                                </h:commandLink>
                            </li>
                        </ul>
                    </li>
                </ul>
            </ui:fragment>
            <!-- END: DUP SUBMENU LINK -->
        </li>
    <!-- END: FILE PG -->
    <!-- DATASET PG -->
        <ui:fragment rendered="#{!isFilePg}">
        <!-- DUPLICATE LINKS -->
        <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and !(downloadPopupRequired) 
                                  and fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload}"
                       styleClass="btn btn-default btn-download" process="@this"
                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                       update="@widgetVar(downloadPackagePopup)" oncomplete="PF('downloadPackagePopup').show();handleResizeDialog('downloadPackagePopup');">
            <f:actionListener binding="#{packagePopupFragmentBean.setFileMetadata(fileMetadata)}" />
            <f:actionListener binding="#{fileDownloadService.writeGuestbookResponseRecord(guestbookResponse, fileMetadata, 'package')}" />
            <!-- package data file: -->
            <!-- no guest book/terms of use/etc. - straight package popup -->
            <span class="glyphicon glyphicon-download-alt"/> #{bundle.download}
        </p:commandLink>
        <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and (downloadPopupRequired) 
                                  and fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload}"
                       styleClass="btn btn-default btn-download"
                       process="@this"
                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                       action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'package')}"
                       update="@widgetVar(downloadPopup)" oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
            <f:actionListener binding="#{packagePopupFragmentBean.setFileMetadata(fileMetadata)}" /> 
            <!-- package data file: -->
            <!-- guest book or terms of use, etc. enabled - open "download popup" first: -->
            <span class="glyphicon glyphicon-download-alt"/> #{bundle.download}
        </p:commandLink>
        <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and !(downloadPopupRequired) 
                                    and !(fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload)}"
                       styleClass="btn btn-default btn-download"
                       process="@this"
                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                       actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'Download')}">
            <!-- non-tabular data file: -->
            <!-- no guest book/terms of use/etc. - straight to the download API url: -->
            <span class="glyphicon glyphicon-download-alt"/> #{bundle.download}
        </p:commandLink>
        <p:commandLink rendered="#{!(fileMetadata.dataFile.tabularData) and downloadPopupRequired 
                                    and !(fileMetadata.dataFile.filePackage and systemConfig.HTTPDownload)}"
                       styleClass="btn btn-default btn-download"
                       process="@this"
                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                       action="#{guestbookResponseService.modifyDatafile(guestbookResponse, fileMetadata)}"
                       update="@widgetVar(downloadPopup)" oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
            <!-- guest book or terms of use, etc. enabled - open "download popup" first: -->
            <span class="glyphicon glyphicon-download-alt"/> #{bundle.download}
        </p:commandLink>
        <!-- END:DUPLICATE LINKS -->
        <!-- DUP SUBMENU LINK -->
        <div class="btn-group" jsf:rendered="#{fileMetadata.dataFile.tabularData}">
            <!-- Download Dropdown -->
            <button type="button" class="btn btn-default btn-download dropdown-toggle" data-toggle="dropdown">
                <span class="glyphicon glyphicon-download-alt"/> #{bundle.download} <span class="caret"/>
            </button>
            <ul class="dropdown-menu multi-level pull-right text-left" role="menu">
                <ui:remove>
                    <li>
                        <p:commandLink styleClass="highlightBold" rendered="#{!(downloadPopupRequired)}"
                                       process="@this"
                                       actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'bundle')}">
                            #{bundle['file.downloadBtn.format.all']}
                        </p:commandLink>
                        <p:commandLink styleClass="highlightBold" rendered="#{downloadPopupRequired}"
                                       process="@this"
                                       action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'bundle' )}"
                                       update="@widgetVar(downloadPopup)"
                                       oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                            #{bundle['file.downloadBtn.format.all']}
                        </p:commandLink>
                    </li>
                    <li role="presentation" class="divider"></li>
                </ui:remove>
                <li>
                    <p:commandLink rendered="#{!downloadPopupRequired and !(fileMetadata.dataFile.originalFormatLabel == 'UNKNOWN')}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'original')}">
                        <h:outputFormat value="#{bundle['file.downloadBtn.format.original']}">
                            <f:param value="#{fileMetadata.dataFile.originalFormatLabel}"/>
                        </h:outputFormat>
                    </p:commandLink>
                    <p:commandLink rendered="#{downloadPopupRequired and !(fileMetadata.dataFile.originalFormatLabel == 'UNKNOWN')}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'original' )}"
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        <h:outputFormat value="#{bundle['file.downloadBtn.format.original']}">
                            <f:param value="#{fileMetadata.dataFile.originalFormatLabel}"/>
                        </h:outputFormat>
                    </p:commandLink>
                </li>
                <li>
                    <p:commandLink rendered="#{!downloadPopupRequired}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'tab')}">
                        #{bundle['file.downloadBtn.format.tab']}
                    </p:commandLink>
                    <p:commandLink rendered="#{downloadPopupRequired}"
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'tab' )}"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        #{bundle['file.downloadBtn.format.tab']}
                    </p:commandLink>
                </li>
                <ui:fragment rendered="#{!(fileMetadata.dataFile.originalFormatLabel == 'RData')}">
                    <li>
                        <p:commandLink rendered="#{!downloadPopupRequired}"
                                       process="@this"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                       actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'RData')}">
                            #{bundle['file.downloadBtn.format.rdata']}
                        </p:commandLink>
                        <p:commandLink rendered="#{downloadPopupRequired}"
                                       process="@this"
                                       disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                       action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'RData' )}"
                                       update="@widgetVar(downloadPopup)"
                                       oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                            #{bundle['file.downloadBtn.format.rdata']}
                        </p:commandLink>
                    </li>
                </ui:fragment>
                <li>
                    <p:commandLink rendered="#{!downloadPopupRequired}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   actionListener="#{fileDownloadService.writeGuestbookAndStartFileDownload(guestbookResponse, fileMetadata, 'var')}">
                        #{bundle['file.downloadBtn.format.var']}
                    </p:commandLink>
                    <p:commandLink rendered="#{downloadPopupRequired}"
                                   process="@this"
                                   disabled="#{(fileMetadata.dataFile.ingestInProgress or lockedFromDownload) ? 'disabled' : ''}" 
                                   action="#{guestbookResponseService.modifyDatafileAndFormat(guestbookResponse, fileMetadata, 'var' )}"
                                   update="@widgetVar(downloadPopup)"
                                   oncomplete="PF('downloadPopup').show();handleResizeDialog('downloadPopup');">
                        #{bundle['file.downloadBtn.format.var']}
                    </p:commandLink>
                </li>
                <li class="dropdown-submenu pull-left">
                    <a tabindex="-1" href="javascript:void(0);">#{bundle['file.downloadBtn.format.citation']}</a>
                    <ul class="dropdown-menu">
                        <li>
                            <h:commandLink id="risLinkFile" actionListener="#{fileDownloadService.downloadDatafileCitationRIS(fileMetadata)}">
                                <h:outputText value="#{bundle['dataset.cite.downloadBtn.ris']}" />
                            </h:commandLink>
                        </li>
                        <li>
                            <h:commandLink id="endNoteLinkFile" action="#{fileDownloadService.downloadDatafileCitationXML(fileMetadata)}">
                                <h:outputText value="#{bundle['dataset.cite.downloadBtn.xml']}" />
                            </h:commandLink>
                        </li>
                        <li>
                            <h:commandLink id="bibLinkFile" action="#{fileDownloadService.downloadDatafileCitationBibtex(fileMetadata)}">
                                <h:outputText value="#{bundle['dataset.cite.downloadBtn.bib']}" />
                            </h:commandLink>
                        </li>
                    </ul>
                </li>
            </ul>
        </div>
        <!-- END: DUP SUBMENU LINK -->
        </ui:fragment>
    <!-- END: DATASET PG -->
    </ui:fragment>
    <!-- Download Button -->
    
    
    <!-- Request Access Button -->
    <ui:fragment rendered="#{!fileMetadata.datasetVersion.deaccessioned and !fileDownloadHelper.canDownloadFile(fileMetadata)
                             and fileMetadata.dataFile.owner.fileAccessRequest}">
        <!-- FILE PG -->
        <li class="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? 'disabled' : ''}"
            jsf:rendered="#{isFilePg}">
            <p:commandLink styleClass="btn-request" rendered="#{fileDownloadHelper.session.user.authenticated 
                                                                    and !requestAccessPopupRequired}"
                        process="@this"
                        actionListener="#{fileDownloadHelper.requestAccess(fileMetadata.dataFile)}"
                        update="@this"
                        disabled="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user)}">
                #{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}
            </p:commandLink>
            <p:commandLink styleClass="btn-request" rendered="#{fileDownloadHelper.session.user.authenticated 
                                                                    and requestAccessPopupRequired}"
                        process="@this"
                        actionListener="#{fileDownloadHelper.addFileForRequestAccess(fileMetadata.dataFile)}"
                        onclick="PF('requestAccessPopup').show()"
                        id="requestAccessPopupLink"
                        disabled="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user)}">
                
                <!-- WHAT IS THIS ID FOR? -->
                
                <!-- TODO fix disabled styling span vs a -->
                
                #{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}
            </p:commandLink>
            <p:commandLink styleClass="btn-request" rendered="#{!fileDownloadHelper.session.user.authenticated }"
                        process="@this"
                        onclick="PF('accessSignUpLogIn_popup').show()">
                
                <!-- 4.2.1 - TODO: retest this on a dataset with fileRequest enabled and with some files restricted to the user -->
                
                #{bundle['file.requestAccess']}
            </p:commandLink>
        </li>
        <!-- END: FILE PG -->
        <ui:fragment rendered="#{!isFilePg}">
        <!-- DATASET PG -->
        <p:commandLink styleClass="btn btn-default btn-request" rendered="#{fileDownloadHelper.session.user.authenticated 
                                                                              and !requestAccessPopupRequired}"
                       process="@this"
                       actionListener="#{fileDownloadHelper.requestAccess(fileMetadata.dataFile)}"
                       update="@this"
                       disabled="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user)}">
            <span class="glyphicon glyphicon-bullhorn"/> #{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}
        </p:commandLink>
        <p:commandLink styleClass="btn btn-default btn-request" rendered="#{fileDownloadHelper.session.user.authenticated 
                                                                              and requestAccessPopupRequired}"
                       process="@this"
                       actionListener="#{fileDownloadHelper.addFileForRequestAccess(fileMetadata.dataFile)}"
                       onclick="PF('requestAccessPopup').show()"
                       id="requestAccessPopupButton"
                       disabled="#{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user)}">
            <span class="glyphicon glyphicon-bullhorn"/> #{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}
        </p:commandLink>
        <p:commandLink styleClass="btn btn-default btn-request" rendered="#{!fileDownloadHelper.session.user.authenticated}"
                       process="@this"
                       onclick="PF('accessSignUpLogIn_popup').show()">
            <!-- 4.2.1 - TODO: retest this on a dataset with fileRequest enabled and with some files restricted to the user -->
            <span class="glyphicon glyphicon-bullhorn"/> #{fileMetadata.dataFile.fileAccessRequesters.contains(dataverseSession.user) ? bundle['file.accessRequested'] : bundle['file.requestAccess']}
        </p:commandLink>
        <!-- END: DATASET PG -->
        </ui:fragment>
    </ui:fragment>
    <!-- END: Request Access Button -->
</ui:composition>