spec:
  replicas: 1
  template:
    spec:
      containers:
        - name: dataverse
          image: ghcr.io/gdcc/dataverse:openshift-poc
          imagePullPolicy: Always
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "2Gi"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /api/info/version
              port: 8080
          #args:
          #  - bash
          #  - -c
          #  - "ls -laZ /opt/payara/config; touch /opt/payara/config/test"
          env:
            - name: DATAVERSE_DB_HOST
              value: postgres
            - name: DATAVERSE_DB_USER
              value: dataverse
            - name: DATAVERSE_DB_PASSWORD
              value: supersecret
          volumeMounts:
            - name: storage
              mountPath: /dv
            - name: datasets
              mountPath: /dv/store
            - name: docroot
              mountPath: /dv/docroot
            - name: uploads
              mountPath: /dv/uploads
            - name: config
              mountPath: /opt/payara/config
            - name: dvtemp
              mountPath: /dv/temp
            - name: tmp
              mountPath: /tmp
            - name: heapdumps
              mountPath: /dumps
        - name: bootstrap
          image: ghcr.io/gdcc/configbaker:openshift-poc
          restartPolicy: Never
          args: ["bootstrap.sh", "-u", "http://localhost:8080", "-t", "3m", "dev"]
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: dataverse-storage
        - name: datasets
          persistentVolumeClaim:
            claimName: dataverse-datasets
        - name: docroot
          persistentVolumeClaim:
            claimName: dataverse-docroot
        - name: uploads
          persistentVolumeClaim:
            claimName: dataverse-uploads
        - name: config
          emptyDir: {}
        - name: dvtemp
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: heapdumps
          emptyDir: {}